import telebot
from datetime import datetime, timedelta
import schedule
import time
import threading# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
TOKEN = '7955350057:AAESM5fA1w9w_8X4k9eEVPFfCO5V_-SAw08'
CHAT_ID = '142652390'  # –í–∞—à Chat ID (—É–∑–Ω–∞—Ç—å —á–µ—Ä–µ–∑ @userinfobot)

bot = telebot.TeleBot(TOKEN)f405 = {
    '28.05.2025':'—Å–¥–∞—á–∞ 405–π —Ñ–æ—Ä–º—ã –∑–∞ –∞–ø—Ä–µ–ª—å',
    '25.06.2025':'—Å–¥–∞—á–∞ 405–π —Ñ–æ—Ä–º—ã –∑–∞ –º–∞–π',
    '22.07.2025':'—Å–¥–∞—á–∞ 405–π —Ñ–æ—Ä–º—ã –∑–∞ –∏—é–Ω—å',
    '22.08.2025':'—Å–¥–∞—á–∞ 405–π —Ñ–æ—Ä–º—ã –∑–∞ –∏—é–ª—å',
    '22.09.2025':'—Å–¥–∞—á–∞ 405–π —Ñ–æ—Ä–º—ã –∑–∞ –∞–≤–≥—É—Å—Ç',
    '22.10.2025':'—Å–¥–∞—á–∞ 405–π —Ñ–æ—Ä–º—ã –∑–∞ —Å–µ—Ç—è–±—Ä—å',
    '25.11.2025':'—Å–¥–∞—á–∞ 405–π —Ñ–æ—Ä–º—ã –∑–∞ –æ–∫—Ç—è–±—Ä—å',
    '22.12.2025':'—Å–¥–∞—á–∞ 405–π —Ñ–æ—Ä–º—ã –∑–∞ –Ω–æ—è–±—Ä—å'
}

ocenka_PB = {
    '06.06.2025':'–æ—Ü–µ–Ω–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞',
    '07.07.2025':'–æ—Ü–µ–Ω–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞',
    '07.08.2025':'–æ—Ü–µ–Ω–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞',
    '05.09.2025':'–æ—Ü–µ–Ω–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞',
    '07.10.2025':'–æ—Ü–µ–Ω–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞',
    '10.11.2025':'–æ—Ü–µ–Ω–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞',
    '05.12.2025':'–æ—Ü–µ–Ω–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞'
}

MIP = {
    '10.06.2025':'–†–∞—Å—á–µ—Ç –ú–ò–ü',
    '10.09.2025':'–†–∞—Å—á–µ—Ç –ú–ò–ü',
    '10.12.2025':'–†–∞—Å—á–µ—Ç –ú–ò–ü'
}
def send_reminder(event_name, days_left):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ Telegram"""
    emoji = '‚ö†Ô∏è' if days_left > 3 else 'üîî'
    message = f"{emoji} –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {event_name} —á–µ—Ä–µ–∑ {days_left} {get_day_word(days_left)}!"
    bot.send_message(CHAT_ID, message)

def get_day_word(days):
    """–°–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ '–¥–µ–Ω—å'"""
    if days % 10 == 1 and days % 100 != 11:
        return '–¥–µ–Ω—å'
    elif 2 <= days % 10 <= 4 and (days % 100 < 10 or days % 100 >= 20):
        return '–¥–Ω—è'
    return '–¥–Ω–µ–π'

def check_upcoming_holidays():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤"""
    today = datetime.now().date()
    
    for date_str, event_name in f405.items():
        event_date = datetime.strptime(date_str, '%d.%m.%Y').date()
        days_until_event = (event_date - today).days
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        if days_until_event == 14:
            send_reminder(event_name, 14)
        elif days_until_event == 7:
            send_reminder(event_name, 7)
        elif days_until_event == 3:
            send_reminder(event_name, 3)
        elif days_until_event == 1:
            send_reminder(event_name, 1)

    for date_str, event_name in ocenka_PB.items():
        event_date = datetime.strptime(date_str, '%d.%m.%Y').date()
        days_until_event = (event_date - today).days
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        if days_until_event == 14:
            send_reminder(event_name, 14)
        elif days_until_event == 7:
            send_reminder(event_name, 7)
        elif days_until_event == 3:
            send_reminder(event_name, 3)
        elif days_until_event == 1:
            send_reminder(event_name, 1)

    for date_str, event_name in MIP.items():
        event_date = datetime.strptime(date_str, '%d.%m.%Y').date()
        days_until_event = (event_date - today).days
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        if days_until_event == 14:
            send_reminder(event_name, 14)
        elif days_until_event == 7:
            send_reminder(event_name, 7)
        elif days_until_event == 3:
            send_reminder(event_name, 3)
        elif days_until_event == 1:
            send_reminder(event_name, 1)

def schedule_checker():
    """–ó–∞–ø—É—Å–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Ñ–æ–Ω–µ"""
    while True:
        schedule.run_pending()
        time.sleep(1)
from telebot import apihelper
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
schedule.every().day.at("09:00").do(check_upcoming_holidays)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00

# –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
thread = threading.Thread(target=schedule_checker)
thread.daemon = True
thread.start()

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞—Ö –∑–∞ 2 –Ω–µ–¥–µ–ª–∏, –Ω–µ–¥–µ–ª—é, 3 –¥–Ω—è –∏ 1 –¥–µ–Ω—å.")


@bot.message_handler(commands=['today'])
def send_today_events(message):
    today = datetime.now().date()
    merged_events = {**f405, **ocenka_PB, **MIP}  # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä–∏
    
    found_events = False
    
    for date_str, name in merged_events.items():  # –ò—Å–ø–æ–ª—å–∑—É–µ–º .items() –¥–ª—è —Å–ª–æ–≤–∞—Ä—è
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –∫–ª—é—á–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ - —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 'YYYY-MM-DD'
        event_date = datetime.strptime(date_str, '%d.%m.%Y').date()
        
        if event_date == today:
            bot.send_message(message.chat.id, name)
            found_events = True
    
    if not found_events:
        bot.send_message(message.chat.id, "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Å–æ–±—ã—Ç–∏–π –Ω–µ—Ç")
    

@bot.message_handler(commands=['events'])
def send_holidays_list(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤"""
    response = "üìÖ –í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã –≤ 2025 –≥–æ–¥—É:\n\n"
    merged_events = {**f405, **ocenka_PB, **MIP}
    for date, name in sorted(merged_events.items(), 
                           key=lambda x: datetime.strptime(x[0], '%d.%m.%Y')):
        response += f"{date}: {name}\n"
    bot.send_message(message.chat.id, response)

# –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º polling
apihelper.delete_webhook(bot.token)

# –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å polling
bot.polling(none_stop=True)